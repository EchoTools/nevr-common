// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v6.30.2
// source: rtapi.proto

package rtapi

import (
	gameapi "github.com/echotools/nevr-common/gameapi"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Envelope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	// Types that are assignable to Message:
	//
	//	*Envelope_Channel
	//	*Envelope_Connectivity
	Message isEnvelope_Message `protobuf_oneof:"message"`
}

func (x *Envelope) Reset() {
	*x = Envelope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rtapi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Envelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Envelope) ProtoMessage() {}

func (x *Envelope) ProtoReflect() protoreflect.Message {
	mi := &file_rtapi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Envelope.ProtoReflect.Descriptor instead.
func (*Envelope) Descriptor() ([]byte, []int) {
	return file_rtapi_proto_rawDescGZIP(), []int{0}
}

func (x *Envelope) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (m *Envelope) GetMessage() isEnvelope_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *Envelope) GetChannel() *SessionUpdateMessage {
	if x, ok := x.GetMessage().(*Envelope_Channel); ok {
		return x.Channel
	}
	return nil
}

func (x *Envelope) GetConnectivity() *ConnectivityStatisticsMessage {
	if x, ok := x.GetMessage().(*Envelope_Connectivity); ok {
		return x.Connectivity
	}
	return nil
}

type isEnvelope_Message interface {
	isEnvelope_Message()
}

type Envelope_Channel struct {
	Channel *SessionUpdateMessage `protobuf:"bytes,2,opt,name=channel,proto3,oneof"`
}

type Envelope_Connectivity struct {
	Connectivity *ConnectivityStatisticsMessage `protobuf:"bytes,3,opt,name=connectivity,proto3,oneof"`
}

func (*Envelope_Channel) isEnvelope_Message() {}

func (*Envelope_Connectivity) isEnvelope_Message() {}

// SessionUpdateMessage is sent from the server to the game service.
type SessionUpdateMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LobbyId       string                     `protobuf:"bytes,1,opt,name=lobby_id,json=lobbyId,proto3" json:"lobby_id,omitempty"`
	TimeStepUsecs uint32                     `protobuf:"varint,2,opt,name=time_step_usecs,json=timeStepUsecs,proto3" json:"time_step_usecs,omitempty"`
	TickCount     uint64                     `protobuf:"varint,3,opt,name=tick_count,json=tickCount,proto3" json:"tick_count,omitempty"`
	EntrantCount  uint64                     `protobuf:"varint,4,opt,name=entrant_count,json=entrantCount,proto3" json:"entrant_count,omitempty"`
	Timestamp     *timestamppb.Timestamp     `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Session       *gameapi.SessionResponse   `protobuf:"bytes,6,opt,name=session,json=session_data,proto3" json:"session,omitempty"`
	UserBones     *gameapi.UserBonesResponse `protobuf:"bytes,7,opt,name=user_bones,proto3" json:"user_bones,omitempty"`
}

func (x *SessionUpdateMessage) Reset() {
	*x = SessionUpdateMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rtapi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionUpdateMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionUpdateMessage) ProtoMessage() {}

func (x *SessionUpdateMessage) ProtoReflect() protoreflect.Message {
	mi := &file_rtapi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionUpdateMessage.ProtoReflect.Descriptor instead.
func (*SessionUpdateMessage) Descriptor() ([]byte, []int) {
	return file_rtapi_proto_rawDescGZIP(), []int{1}
}

func (x *SessionUpdateMessage) GetLobbyId() string {
	if x != nil {
		return x.LobbyId
	}
	return ""
}

func (x *SessionUpdateMessage) GetTimeStepUsecs() uint32 {
	if x != nil {
		return x.TimeStepUsecs
	}
	return 0
}

func (x *SessionUpdateMessage) GetTickCount() uint64 {
	if x != nil {
		return x.TickCount
	}
	return 0
}

func (x *SessionUpdateMessage) GetEntrantCount() uint64 {
	if x != nil {
		return x.EntrantCount
	}
	return 0
}

func (x *SessionUpdateMessage) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *SessionUpdateMessage) GetSession() *gameapi.SessionResponse {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *SessionUpdateMessage) GetUserBones() *gameapi.UserBonesResponse {
	if x != nil {
		return x.UserBones
	}
	return nil
}

// ConnectivityStatsMessage is a structure normally only seen in the r14logs
type ConnectivityStatisticsMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketLossRatio    float32 `protobuf:"fixed32,1,opt,name=packet_loss_ratio,json=packetLossRatio,proto3" json:"packet_loss_ratio,omitempty"`
	PredictionOffset   uint64  `protobuf:"varint,2,opt,name=prediction_offset,json=predictionOffset,proto3" json:"prediction_offset,omitempty"`
	Target             uint64  `protobuf:"varint,3,opt,name=target,proto3" json:"target,omitempty"`
	LocalTime          uint64  `protobuf:"varint,4,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	ServerTime         uint64  `protobuf:"varint,5,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"`
	PendingServerDelta int64   `protobuf:"varint,6,opt,name=pending_server_delta,json=pendingServerDelta,proto3" json:"pending_server_delta,omitempty"`
	DiscardedFramePct  float32 `protobuf:"fixed32,7,opt,name=discarded_frame_pct,json=discardedFramePct,proto3" json:"discarded_frame_pct,omitempty"`
}

func (x *ConnectivityStatisticsMessage) Reset() {
	*x = ConnectivityStatisticsMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rtapi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectivityStatisticsMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectivityStatisticsMessage) ProtoMessage() {}

func (x *ConnectivityStatisticsMessage) ProtoReflect() protoreflect.Message {
	mi := &file_rtapi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectivityStatisticsMessage.ProtoReflect.Descriptor instead.
func (*ConnectivityStatisticsMessage) Descriptor() ([]byte, []int) {
	return file_rtapi_proto_rawDescGZIP(), []int{2}
}

func (x *ConnectivityStatisticsMessage) GetPacketLossRatio() float32 {
	if x != nil {
		return x.PacketLossRatio
	}
	return 0
}

func (x *ConnectivityStatisticsMessage) GetPredictionOffset() uint64 {
	if x != nil {
		return x.PredictionOffset
	}
	return 0
}

func (x *ConnectivityStatisticsMessage) GetTarget() uint64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *ConnectivityStatisticsMessage) GetLocalTime() uint64 {
	if x != nil {
		return x.LocalTime
	}
	return 0
}

func (x *ConnectivityStatisticsMessage) GetServerTime() uint64 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

func (x *ConnectivityStatisticsMessage) GetPendingServerDelta() int64 {
	if x != nil {
		return x.PendingServerDelta
	}
	return 0
}

func (x *ConnectivityStatisticsMessage) GetDiscardedFramePct() float32 {
	if x != nil {
		return x.DiscardedFramePct
	}
	return 0
}

var File_rtapi_proto protoreflect.FileDescriptor

var file_rtapi_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x72, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x6e,
	0x65, 0x76, 0x72, 0x2e, 0x72, 0x74, 0x61, 0x70, 0x69, 0x1a, 0x15, 0x67, 0x61, 0x6d, 0x65, 0x61,
	0x70, 0x69, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xb6, 0x01, 0x0a, 0x08, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64,
	0x12, 0x3c, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x6e, 0x65, 0x76, 0x72, 0x2e, 0x72, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x4f,
	0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6e, 0x65, 0x76, 0x72, 0x2e, 0x72, 0x74, 0x61, 0x70,
	0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x42,
	0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xd6, 0x02, 0x0a, 0x14, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x49, 0x64, 0x12, 0x26,
	0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x5f, 0x75, 0x73, 0x65, 0x63,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x65,
	0x70, 0x55, 0x73, 0x65, 0x63, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x63, 0x6b, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x63, 0x6b,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x74,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x65, 0x6e,
	0x74, 0x72, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x3c, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6e, 0x65, 0x76, 0x72, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x3f, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x62, 0x6f, 0x6e, 0x65, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6e, 0x65, 0x76, 0x72, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x6f, 0x6e, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x62, 0x6f,
	0x6e, 0x65, 0x73, 0x22, 0xb2, 0x02, 0x0a, 0x1d, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f,
	0x6c, 0x6f, 0x73, 0x73, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x6f, 0x73, 0x73, 0x52, 0x61, 0x74, 0x69,
	0x6f, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x70, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x13, 0x64, 0x69, 0x73, 0x63,
	0x61, 0x72, 0x64, 0x65, 0x64, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x63, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x65, 0x64,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x50, 0x63, 0x74, 0x42, 0x62, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e,
	0x65, 0x63, 0x68, 0x6f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x6e, 0x65, 0x76, 0x72, 0x2e, 0x72,
	0x74, 0x61, 0x70, 0x69, 0x42, 0x0c, 0x4e, 0x65, 0x76, 0x72, 0x52, 0x65, 0x61, 0x6c, 0x74, 0x69,
	0x6d, 0x65, 0x50, 0x01, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x65, 0x63, 0x68, 0x6f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2f, 0x6e, 0x65, 0x76, 0x72, 0x2d,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x72, 0x74, 0x61, 0x70, 0x69, 0xaa, 0x02, 0x0d, 0x4e,
	0x65, 0x76, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rtapi_proto_rawDescOnce sync.Once
	file_rtapi_proto_rawDescData = file_rtapi_proto_rawDesc
)

func file_rtapi_proto_rawDescGZIP() []byte {
	file_rtapi_proto_rawDescOnce.Do(func() {
		file_rtapi_proto_rawDescData = protoimpl.X.CompressGZIP(file_rtapi_proto_rawDescData)
	})
	return file_rtapi_proto_rawDescData
}

var file_rtapi_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_rtapi_proto_goTypes = []interface{}{
	(*Envelope)(nil),                      // 0: nevr.rtapi.Envelope
	(*SessionUpdateMessage)(nil),          // 1: nevr.rtapi.SessionUpdateMessage
	(*ConnectivityStatisticsMessage)(nil), // 2: nevr.rtapi.ConnectivityStatisticsMessage
	(*timestamppb.Timestamp)(nil),         // 3: google.protobuf.Timestamp
	(*gameapi.SessionResponse)(nil),       // 4: nevr.gameapi.SessionResponse
	(*gameapi.UserBonesResponse)(nil),     // 5: nevr.gameapi.UserBonesResponse
}
var file_rtapi_proto_depIdxs = []int32{
	1, // 0: nevr.rtapi.Envelope.channel:type_name -> nevr.rtapi.SessionUpdateMessage
	2, // 1: nevr.rtapi.Envelope.connectivity:type_name -> nevr.rtapi.ConnectivityStatisticsMessage
	3, // 2: nevr.rtapi.SessionUpdateMessage.timestamp:type_name -> google.protobuf.Timestamp
	4, // 3: nevr.rtapi.SessionUpdateMessage.session:type_name -> nevr.gameapi.SessionResponse
	5, // 4: nevr.rtapi.SessionUpdateMessage.user_bones:type_name -> nevr.gameapi.UserBonesResponse
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_rtapi_proto_init() }
func file_rtapi_proto_init() {
	if File_rtapi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rtapi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Envelope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rtapi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionUpdateMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rtapi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectivityStatisticsMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_rtapi_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Envelope_Channel)(nil),
		(*Envelope_Connectivity)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rtapi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rtapi_proto_goTypes,
		DependencyIndexes: file_rtapi_proto_depIdxs,
		MessageInfos:      file_rtapi_proto_msgTypes,
	}.Build()
	File_rtapi_proto = out.File
	file_rtapi_proto_rawDesc = nil
	file_rtapi_proto_goTypes = nil
	file_rtapi_proto_depIdxs = nil
}
